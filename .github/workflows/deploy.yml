name: Deploy To EC2

on:
  push:
    branches:
      - main

jobs:
  Deploy:
    runs-on: ubuntu-latest
    steps:
      - name: 깃허브 레포지토리 불러오기
        uses: actions/checkout@v4

      - name: JDK 17 설치하기
        uses: actions/setup-java@v4
        with:
          distribution: corretto
          java-version: 17

      - name: application.properties 추가하기
        run: |
          mkdir -p src/main/resources
          echo "${{ secrets.APPLICATION_PROPERTIES }}" > src/main/resources/application.properties
          echo "${{ secrets.APPLICATION_PROD_PROPERTIES }}" > src/main/resources/application-prod.properties
          echo "${{ secrets.APPLICATION_TEST_PROPERTIES }}" > src/main/resources/application-test.properties
          mkdir -p src/test/resources
          echo "${{ secrets.APPLICATION_PROPERTIES_TEST }}" > src/test/resources/application.properties

      - name: 키스토어 파일 디코딩 및 추가하기
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > src/main/resources/keystore.p12

      - name: 테스트 및 빌드하기
        run: ./gradlew clean build

      - name: 빌드된 파일 이름 변경하기
        run: mv ./build/libs/*SNAPSHOT.jar ./project.jar

      - name: AWS 유저 인증
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_USER_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_USER_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: 가상 머신 IP 얻기
        id: ip
        uses: haythem/public-ip@v1.2

      - name: 가상 머신 IP 인바운드 규칙에 추가하기
        run: |
          aws ec2 authorize-security-group-ingress --group-id ${{ secrets.AWS_SG_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32

      - name: SCP로 EC2에 빌드된 파일 전송하기
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          source: project.jar
          target: /home/ubuntu/hello-blog-api-dev-server/tobe

      - name: SSH로 EC2에 접속하기
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script_stop: true
          script: |
            rm -rf /home/ubuntu/hello-blog-api-dev-server/current
            mkdir /home/ubuntu/hello-blog-api-dev-server/current
            mv /home/ubuntu/hello-blog-api-dev-server/tobe/project.jar /home/ubuntu/hello-blog-api-dev-server/current/project.jar
            cd /home/ubuntu/hello-blog-api-dev-server/current
            sudo fuser -k -n tcp 443 || true
            sudo nohup java -jar project.jar > ./output.log 2>&1 &
            rm -rf /home/ubuntu/hello-blog-api-dev-server/tobe
